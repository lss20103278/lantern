#!/bin/sh

:<<Note_script_version
ver:2.6
for:WES/panel variants detection
update:2017/9/19
by:ykl
Note_script_version

:<<HELP
how to run?:
HELP

sample=$1
proc=$2

##env:
#source `pwd`/dbevn.sh
source ../dbevn.sh


##-->Workflow Control
#usage:select cmds from following
#full functions : "qc clean mapping sorting precalling calling gvcf index gtgvcf vqsr hardfilt left-normalize annotation depth abase qcsum qcvcf"  what is abase?
# for panel single
#cmd="clean mapping precalling gvcf index_single gtgvcf hardfilt left-normalize depth qcsum qcvcf annotation"
# for trio
#cmd="clean mapping precalling gvcf index_trio depth qcsum"
# for wxs single
#cmd="clean mapping precalling gvcf index_single gtgvcf vqsr left-normalize depth qcsum qcvcf annotation"

:<<Note_pepline_main
rawdata -> clean -> mapping -> sorting -> precalling (bqsr)-> calling -> vqsr(WXS only) -> left-normalize -> annotation
Thus,use:
cmd="clean mapping sorting precalling calling vqsr left-normalize annotation"
Note_pepline_main

:<<Note_pepline_sub1
rawdata -> clean -> mapping -> sorting -> precalling (bqsr)-> gvcf -> gtgvcf -> vqsr -> left-normalize -> annotation
Thus,use:
cmd="clean mapping sorting precalling gvcf vqsr left-normalize annotation"
Note_pepline_sub1

:<<Note_pepline_sub2
rawdata -> clean -> mapping -> sorting -> precalling (bqsr)-> calling -> hardfilt(PANEL only) -> left-normalize -> annotation
Note_pepline_sub2

##-->Name of raw files
##tips:make sure the rules of sample names
raw_data1=../raw/$sample\_*R1*.fastq.gz
raw_data2=../raw/$sample\_*R2*.fastq.gz

##----------------------------------------------------------------check functions
function runlog(){
echo -e "\033[31m##$1 \n\033[0m"
}
#usage:runlog "loginfos"

function check_file(){
if [ ! -e $1 ];then
echo -e "\033[31mError:$1 not exist,exiting...\033[0m"
exit
fi
}
#usage:check_file filename
##----------------------------------------------------------------check functions

##-->Check Path parameters:
check_file $ref_genome
check_file $panel
check_file $ref_1000G_indel
check_file $ref_1000M_indel
check_file $ref_snp
check_file $adapter
##
echo "" >> finished
sed -i "/^$/d" finished
echo "start `date`" >> finished

##-->starting:
##cmd:qc
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="qc"{print "on"}'`" = "on" ];then
outdir="1_data"
runlog "running:qc_raw"
[ ! -e $outdir/qc_raw ] && mkdir -p $outdir/qc_raw
fastqc $raw_data1 -o $outdir/qc_raw > $outdir/qc_raw/qc_1.log 
fastqc $raw_data2 -o $outdir/qc_raw > $outdir/qc_raw/qc_2.log 
fi

##cmd:clean
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="clean"{print "on"}'`" = "on" ];then
sed -i "/^clean/d" finished
outdir="1_data"
runlog "running:clean & qc_clean"
[ ! -e $outdir/qc_clean ] && mkdir -p $outdir/qc_clean

fastq-mcf -l 50 -o $outdir/$sample\_R1.fastq.gz -o $outdir/$sample\_R2.fastq.gz $adapter $raw_data1 $raw_data2

echo "clean `date`" >> finished
fi

##cmd:mapping and sorting
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="mapping"{print "on"}'`" = "on" ];then
sed -i "/^mapping/d" finished
outdir="2_mapping"
runlog "running:sorting:mapping,sam->bam"
[ ! -e $outdir ] && mkdir -p $outdir

inRead1=1_data/$sample\_R1.fastq.gz
inRead2=1_data/$sample\_R2.fastq.gz

check_file $inRead1
check_file $inRead2

(bwa mem -t $proc -M $bwa_index -R "@RG\tID:$sample\tSM:$sample\tPL:Illumina" $inRead1 $inRead2 || echo -n 'error') | sentieon util sort -o $outdir/$sample.sort.bam -t $proc --sam2bam -i -
rm -r 1_data

sentieon driver -t $proc -r $ref_genome -i $outdir/$sample.sort.bam \
	--algo GCBias --summary $outdir/gc_summary.txt $outdir/gc_metric.txt \
	--algo MeanQualityByCycle $outdir/mq_metric.txt \
	--algo QualDistribution $outdir/qd_metric.txt \
	--algo InsertSizeMetricAlgo $outdir/is_metric.txt \
	--algo AlignmentStat $outdir/aln_metric.txt
	
sentieon plot metrics -o $outdir/metrics.pdf gc=$outdir/gc_metric.txt mq=$outdir/mq_metric.txt qd=$outdir/qd_metric.txt isize=$outdir/is_metric.txt

echo "mapping `date`" >> finished

runlog "running:sorting:rm-duplicates"

sentieon driver -t $proc -i $outdir/$sample.sort.bam --algo LocusCollector --fun score_info $outdir/score.txt

sentieon driver -t $proc -i $outdir/$sample.sort.bam --algo Dedup --rmdup --score_info $outdir/score.txt --metrics $outdir/$sample.metrics /BP12_share/sslyu/bam/$sample.sort.mkdup.bam
rm $outdir/$sample.sort.bam*
echo "sorting `date`" >> finished
fi

##cmd:depth
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="depth"{print "on"}'`" = "on" ];then
sed -i "/^depth/d" finished
runlog "running:depth"
outdir="2_mapping"
check_file /BP12_share/sslyu/bam/$sample.sort.mkdup.bam
sentieon driver -r $ref_genome -i /BP12_share/sslyu/bam/$sample.sort.mkdup.bam --interval $panel \
	 --algo CoverageMetrics --gene_list $ref_annotation/refseq.sorted.txt \
	 --cov_thresh 1 --cov_thresh 10 --cov_thresh 20 $outdir/$sample.depth

echo "depth `date`" >> finished
fi

##cmd:qcsum
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="qcsum"{print "on"}'`" = "on" ];then
sed -i "/^qcsum/d" finished
runlog "running:qcsum"
outdir="2_mapping"
check_file $outdir/$sample.depth
echo -e "sample\t1Xcov\t20Xcov\tAvgDepth\tduplication" > $outdir/$sample.qcsum
printf $sample"\t" >> $outdir/$sample.qcsum
awk -F "\t" '{depth+=$4} $4>=1{sum1++} $4>=20{sum20++} END{printf (sum1+0.0)/(NR-1)*100"\t"(sum20+0.0)/(NR-1)*100"\t"(depth+0.0)/(NR-1)"\t"}' $outdir/$sample.depth >> $outdir/$sample.qcsum
[ -f $outdir/$sample.metrics ] && grep PERCENT_DUPLICATION -A 1 $outdir/$sample.metrics | tail -n 1 | awk '{print $(NF-1)}' >> $outdir/$sample.qcsum
#rm $outdir/$sample.depth
echo "qcsum `date`" >> finished
fi

##cmd:precalling
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="precalling"{print "on"}'`" = "on" ];then
sed -i "/^precalling/d" finished
outdir="3_variants"
[ ! -e $outdir ] && mkdir -p $outdir
runlog "running:precalling:realignment"

sentieon driver -t $proc -r $ref_genome -i /BP12_share/sslyu/bam/$sample.sort.mkdup.bam --algo Realigner -k $ref_1000G_indel -k $ref_1000M_indel --interval_list $panel $outdir/$sample.realn.bam

runlog "running:precalling:BQSR"

check_file $outdir/$sample.realn.bam

sentieon driver -t $proc -r $ref_genome -i $outdir/$sample.realn.bam --interval $panel --algo QualCal -k $ref_snp -k $ref_1000G_indel -k $ref_1000M_indel $outdir/recal_data.table

sentieon driver -t $proc -r $ref_genome -i $outdir/$sample.realn.bam --interval $panel -q $outdir/recal_data.table --algo QualCal -k $ref_snp -k $ref_1000G_indel -k $ref_1000M_indel $outdir/recal_data.table.post

sentieon driver -t $proc --algo QualCal --plot --before $outdir/recal_data.table --after $outdir/recal_data.table.post recal.csv

sentieon plot bqsr -o recal_plots.pdf recal.csv

echo "precalling `date`" >> finished
fi

##cmd:calling
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="calling"{print "on"}'`" = "on" ];then
sed -i "/^calling/d" finished
outdir="3_variants"
runlog "running:calling"
check_file $outdir/$sample.realn.bam

sentieon driver -t $proc -r $ref_genome --interval $panel -i $outdir/$sample.realn.bam -q $outdir/recal_data.table --algo Haplotyper -d $ref_snp --emit_conf=10 --call_conf=30 $outdir/$sample.raw.vcf

echo "calling `date`" >> finished
fi

##cmd:gvcf
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="gvcf"{print "on"}'`" = "on" ];then
sed -i "/^gvcf/d" finished
outdir="3_variants"
[ ! -e $outdir/gvcf ] && mkdir -p $outdir/gvcf
runlog "running:calling"
check_file $outdir/$sample.realn.bam

sentieon driver -t $proc -r $ref_genome --interval $panel -i $outdir/$sample.realn.bam -q $outdir/recal_data.table --algo Haplotyper \
	-d $ref_snp --emit_mode gvcf $outdir/gvcf/$sample.g.vcf
rm $outdir/$sample.realn.bam*

#sentieon driver -t $proc -r $ref_genome --interval $panel -i $outdir/$sample.realn.bam -q $outdir/recal_data.table --algo Haplotyper \
#	-d $ref_snp --emit_conf=10 --call_conf=10 --emit_mode gvcf $outdir/gvcf/$sample.g.vcf

echo "gvcf `date`" >> finished
fi

##cmd:index_single
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="index_single"{print "on"}'`" = "on" ];then
sed -i "/^index_single/d" finished
outdir="3_variants"
runlog "running:index_single"
[ ! -d ../gvcf ] && mkdir -p ../gvcf
if [ ! -e ../gvcf/$sample.g.vcf ];then
cp $outdir/gvcf/$sample.g.vcf ../gvcf/
fi
if [ ! -e ../gvcf/$sample.g.vcf.idx ];then
/DATA/sslyu/soft/gatk-4.0.8.1/gatk IndexFeatureFile -F ../gvcf/$sample.g.vcf
fi
echo "index_single `date`" >> finished
fi

##cmd:index_trio
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="index_trio"{print "on"}'`" = "on" ];then
sed -i "/^index_trio/d" finished
outdir="3_variants"
runlog "running:index_trio"
[ ! -d ../gvcf ] && mkdir -p ../gvcf
if [ ! -e ../gvcf/$sample.raw.g.vcf ];then
cp $outdir/gvcf/$sample.g.vcf ../gvcf/$sample.raw.g.vcf	
fi
/DATA/sslyu/trio_BWA-GATK_3.0/src/gvcf.py ../gvcf/$sample
if [ ! -e ../gvcf/$sample.g.vcf.idx ];then
/DATA/sslyu/soft/gatk-4.0.8.1/gatk IndexFeatureFile -F ../gvcf/$sample.g.vcf #when using GATK4.0 and sentieon
fi
echo "index `date`" >> finished
fi

##cmd:gtgvcf
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="gtgvcf"{print "on"}'`" = "on" ];then
sed -i "/^gtgvcf/d" finished
outdir="3_variants"

sentieon driver -t $proc -r $ref_genome --interval $panel --algo GVCFtyper --call_conf=10 -d $ref_snp -v $outdir/gvcf/$sample.g.vcf $outdir/$sample.raw.vcf

echo "gtgvcf `date`" >> finished
fi

##cmd:hardfilt
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="hardfilt"{print "on"}'`" = "on" ];then
sed -i "/^hardfilt/d" finished

runlog "running:calling:select-snp"
outdir="3_variants"
/DATA/sslyu/soft/gatk-4.0.8.1/gatk IndexFeatureFile -F $outdir/$sample.raw.vcf
/DATA/sslyu/soft/gatk-4.0.8.1/gatk SelectVariants -R $ref_genome -select-type SNP --variant $outdir/$sample.raw.vcf -O $outdir/$sample.raw.snp.vcf

runlog "running:calling:filt-snp"
/DATA/sslyu/soft/gatk-4.0.8.1/gatk VariantFiltration -R $ref_genome --variant $outdir/$sample.raw.snp.vcf -O $outdir/$sample.raw.snp.fil.vcf --filter-name "REJECT" --filter-expression "QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0"

runlog "running:calling:select-indel"
/DATA/sslyu/soft/gatk-4.0.8.1/gatk SelectVariants -R $ref_genome -select-type INDEL --variant $outdir/$sample.raw.vcf -O $outdir/$sample.raw.indel.vcf

runlog "running:calling:filt-indel"
/DATA/sslyu/soft/gatk-4.0.8.1/gatk VariantFiltration -R $ref_genome --variant $outdir/$sample.raw.indel.vcf -O $outdir/$sample.raw.indel.fil.vcf --filter-name "REJECT" --filter-expression "QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0"

runlog "running:calling:select-passed-snp/indel"
awk '/^#/ || $7 == "PASS"' $outdir/$sample.raw.snp.fil.vcf >$outdir/$sample.pass.snp.vcf
awk '/^#/ || $7 == "PASS"' $outdir/$sample.raw.indel.fil.vcf >$outdir/$sample.pass.indel.vcf

runlog "running:calling:catvariants"
#java -cp $soft_path/GATK/3.7/GenomeAnalysisTK.jar org.broadinstitute.gatk.tools.CatVariants -R $ref_genome -V $outdir/$sample.pass.snp.vcf -V $outdir/$sample.pass.indel.vcf -out $outdir/$sample.mul.vcf -assumeSorted
/DATA/sslyu/soft/gatk-4.0.8.1/gatk SortVcf -R $ref_genome -I $outdir/$sample.pass.snp.vcf -I $outdir/$sample.pass.indel.vcf -O $outdir/$sample.mul.vcf

echo "hardfilt `date`" >> finished
fi

##cmd:vqsr
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="vqsr"{print "on"}'`" = "on" ];then
sed -i "/^vqsr/d" finished
runlog "running:vqsr"
outdir="3_variants/vqsr"
[ ! -e $outdir ] && mkdir -p $outdir

#SNP
resource_text="--resource $ref_vqsr_hapmap --resource_param hapmap,known=false,training=true,truth=true,prior=15.0 "
resource_text="$resource_text --resource $ref_vqsr_omni --resource_param omni,known=false,training=true,truth=false,prior=12.0 "
resource_text="$resource_text --resource $ref_vqsr_1000G --resource_param 1000G,known=false,training=true,truth=false,prior=10.0 "
resource_text="$resource_text --resource $ref_snp --resource_param dbsnp,known=true,training=false,truth=false,prior=2.0"

annotation_array="QD MQ MQRankSum ReadPosRankSum FS SOR"
for annotation in $annotation_array; do 
	annotate_text="$annotate_text --annotation $annotation"
done

sentieon driver -r $ref_genome --algo VarCal -v 3_variants/$sample.raw.vcf $resource_text $annotate_text --max_gaussians 4 --var_type SNP --plot_file $outdir/snp.plots.R \
	--tranches_file $outdir/snp.tranches $outdir/snp.recal
	
sentieon driver -r $ref_genome --algo ApplyVarCal -v 3_variants/$sample.raw.vcf --sensitivity 99.0 --var_type SNP --tranches_file $outdir/snp.tranches --recal $outdir/snp.recal $outdir/$sample.raw.vqsr.snp.vcf

sentieon plot vqsr -o $outdir/snp.VQSR.pdf $outdir/snp.plots.R 

#INDEL
resource_text="--resource $ref_1000M_indel --resource_param mills,known=false,training=true,truth=true,prior=12.0 "
resource_text="$resource_text --resource $ref_snp --resource_param dbsnp,known=true,training=false,truth=false,prior=2.0"

annotate_text=""
annotation_array="QD DP MQRankSum ReadPosRankSum FS SOR"
for annotation in $annotation_array; do 
	annotate_text="$annotate_text --annotation $annotation"
done

sentieon driver -r $ref_genome --algo VarCal -v 3_variants/$sample.raw.vcf $resource_text $annotate_text --max_gaussians 4 --var_type INDEL --plot_file $outdir/indel.plots.R \
	--tranche 100.0 --tranche 99.9 --tranche 99.0 --tranche 90.0 \
	--tranches_file $outdir/indel.tranches $outdir/indel.recal
	
sentieon driver -r $ref_genome --algo ApplyVarCal -v 3_variants/$sample.raw.vcf --sensitivity 99.0 --var_type INDEL --tranches_file $outdir/indel.tranches --recal $outdir/indel.recal $outdir/$sample.raw.vqsr.indel.vcf

sentieon plot vqsr -o $outdir/indel.VQSR.pdf $outdir/indel.plots.R 
 
#filt pass:
awk -F "\t" '$1~/^#/ ||$7=="PASS" {print}' $outdir/$sample.raw.vqsr.snp.vcf > $outdir/$sample.raw.vqsr.snp.pass.vcf
awk -F "\t" '$1~/^#/ ||$7=="PASS" {print}' $outdir/$sample.raw.vqsr.indel.vcf > $outdir/$sample.raw.vqsr.indel.pass.vcf

#combine:
#java -cp $soft_path/GATK/3.7/GenomeAnalysisTK.jar org.broadinstitute.gatk.tools.CatVariants -R $ref_genome -V $outdir/$sample.raw.vqsr.snp.pass.vcf -V $outdir/$sample.raw.vqsr.indel.pass.vcf -out 3_variants/$sample.mul.vcf -assumeSorted
/DATA/sslyu/soft/gatk-4.0.8.1/gatk IndexFeatureFile -F $outdir/$sample.raw.vqsr.snp.pass.vcf
/DATA/sslyu/soft/gatk-4.0.8.1/gatk IndexFeatureFile -F $outdir/$sample.raw.vqsr.indel.pass.vcf
/DATA/sslyu/soft/gatk-4.0.8.1/gatk SortVcf -R $ref_genome -I $outdir/$sample.raw.vqsr.snp.pass.vcf -I $outdir/$sample.raw.vqsr.indel.pass.vcf -O 3_variants/$sample.mul.vcf

echo "vqsr `date`" >> finished
fi

##cmd:left-normalize
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="left-normalize"{print "on"}'`" = "on" ];then
runlog "running:left-normalize"
bcftools norm -m - 3_variants/$sample.mul.vcf | bcftools norm -f $ref_genome > 3_variants/$sample.vcf
echo "left-normalize `date`" >> finished
fi

##cmd:annotation
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="annotation"{print "on"}'`" = "on" ];then
sed -i "/^annotation/d" finished
runlog "running:annotation"
outdir="3_variants"
check_file $outdir/$sample.vcf
perl /DATA/ypliu/opt/mskcc-vcf2maf-1b16b35/vcf2maf.pl --input-vcf $outdir/$sample.vcf --output-maf $outdir/$sample.maf --vep-path /DATA/ypliu/opt/mskcc-vcf2maf-1b16b35/vep --vep-data /DATA/ypliu/opt/mskcc-vcf2maf-1b16b35/.vep --ref-fasta /DATA/sslyu/refGene/hg19.fa --filter-vcf /DATA/ypliu/opt/mskcc-vcf2maf-1b16b35/.vep/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz
sed -i '1d' $outdir/$sample.maf
/DATA/sslyu/soft/annovar/convert2annovar.pl -format vcf4 $outdir/$sample.vcf -outfile $outdir/$sample.avinput
/DATA/sslyu/soft/annovar/convert2annovar.pl -format vcf4 $outdir/$sample.vcf -outfile $outdir/$sample.link --includeinfo
sed 's/^chr//' $outdir/$sample.vcf|gzip -c ->$outdir/$sample.vcf.gz
score.sh $outdir/$sample.vcf.gz $outdir/$sample.CADD.gz
bgzip -df $outdir/$sample.CADD.gz
sed -i '1d' $outdir/$sample.CADD
#/SSD750/PB1/soft1/annovar/table_annovar.pl $outdir/$sample.avinput $ref_annotation -buildver hg19 -out $outdir/$sample.ann -protocol refGene,avsnp147,1000g2015aug_all,1000g2015aug_eas,gnomad_genome_eas,gnomad_exomes_hom,gnomad_exomes_hom_all,gnomad_exomes_hemi,exac03_eas,esp6500_all,dbscsnv11,dbnsfp33a,revel,intervar_20170202,clinvar_20170905,ensembl,hgmd_2018_spring,bed,bed,bed,bed -operation g,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,r,r,r,r -bedfile hg19_Dead_Zone.txt,hg19_Problem_High.txt,hg19_Problem_Low.txt,hg19_HI_Predictions_Version3.bed -arg ',,,,,,,,,,,,,,,,,-colsWanted 4,-colsWanted 4,-colsWanted 4,-colsWanted 4' -remove -nastring "NA" -otherinfo
/DATA/sslyu/soft/annovar/table_annovar.pl $outdir/$sample.avinput $ref_annotation -buildver hg19 -out $outdir/$sample.ann -protocol refGene,avsnp147,1000g2015aug_all,1000g2015aug_eas,gnomad_genome_eas,gnomad_exomes_hom,gnomad_exomes_hom_all,gnomad_exomes_hemi,exac03_eas,esp6500_all,dbscsnv11,dbnsfp33a,revel,intervar_20180118,clinvar_20180603,ensembl,hgmd_2018_spring,bed,bed,bed,bed -operation g,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,r,r,r,r -bedfile hg19_Dead_Zone.txt,hg19_Problem_High.txt,hg19_Problem_Low.txt,hg19_HI_Predictions_Version3.bed -arg ',,,,,,,,,,,,,,,,,-colsWanted 4,-colsWanted 4,-colsWanted 4,-colsWanted 4' -remove -nastring "NA" -otherinfo # annovar 20180416 avsnp147->avsnp150 intervar_201702->intervar_20180118 clinvar_20170905->clinvar_20180603
sed -i "1s/bed\tbed2\tbed3\tbed4/Dead_Zone\tProblem_High\tProblem_Low\tHI_Predictions/" $outdir/$sample.ann\.hg19_multianno.txt 
sed -i "s/Otherinfo/Heterozygosity\tQual\tdepth/" $outdir/$sample.ann\.hg19_multianno.txt #GenotypingQuality-->Qual
echo "annotation `date`" >> finished
fi

##cmd:qcvcf
if [ "`echo $cmd|sed "s/ /\n/g"|awk '$1=="qcvcf"{print "on"}'`" = "on" ];then
sed -i "/^qcvcf/d" finished
runlog "running:qcvcf"
check_file 3_variants/$sample.vcf
echo -e "sample\tindel_genomic\tsnp_genomic\tts/tv_genomic\tsnp_exonic\tts/tv_exonic" > 3_variants/$sample.qcvcf
printf "$sample\t" >> 3_variants/$sample.qcvcf
[ ! -d tmprun ] && mkdir tmprun
/DATA/sslyu/soft/annovar/convert2annovar.pl -format vcf4 3_variants/$sample.vcf -outfile tmprun/$sample.avinput
/DATA/sslyu/soft/annovar/table_annovar.pl tmprun/$sample.avinput $ref_annotation -buildver hg19 -out tmprun/$sample -protocol refGene -operation g -remove

awk -F "\t" 'BEGIN{indel=0}  $4=="-"||$5=="-"{indel++} $4!="-"&&$5!="-"{print $4$5} END{print indel"\t"NR-1-indel"\t"}' tmprun/$sample.hg19_multianno.txt | awk 'BEGIN{ts=0} $1=="AG"||$1=="GA"||$1=="CT"||$1=="TC"{ts++} END{printf $0;tv=NR-2-ts;printf (ts+0.0)/tv"\t"}' >> 3_variants/$sample.qcvcf

awk -F "\t" '$6=="exonic"||$6=="exonic;splicing"{print $4$5}' tmprun/$sample.hg19_multianno.txt | awk '$1!~/-/{print}'| awk 'BEGIN{ts=0} $1=="AG"||$1=="GA"||$1=="CT"||$1=="TC"{ts++} END{tv=NR-1-ts;printf ts+tv"\t"(ts+0.0)/tv}' >> 3_variants/$sample.qcvcf

rm -rf tmprun
echo "qcvcf `date`" >> finished
fi
